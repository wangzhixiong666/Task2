<?xml version="1.0" encoding="UTF-8"?>

<web-app
        version="3.0"
        xmlns="http://java.sun.com/xml/ns/javaee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

    <!--第一步 ：加载Spring上下文环境的配置文件applicationContext.xml文件-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value> classpath:ApplicationContext.xml</param-value>
    </context-param>
    <listener>
        <description>Spring容器加载监听器</description>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>


    <!--第二步：字符编码过滤器 -->
    <filter>
        <filter-name>characterEncodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
        <init-param>
            <param-name>forceEncoding</param-name>
            <param-value>true</param-value>
        </init-param>
    </filter>
    <!-- 路径映射 -->
    <filter-mapping>
        <filter-name>characterEncodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- 第三步：配置 SpringMvc核心控制器 DispatcherServlet -->
    <servlet>
        <!--servlet名称-->
        <servlet-name>DispatcherServlet</servlet-name>
        <!-- servlet类全路径-->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <!-- 配置DispatcherServlet初始化参数：配置springmvc配置文件的位置和名称

                   实际上也可以不通过 contextConfigLocation 来配置 SpringMVC 的配置文件, 而使用默认的.
                   默认的配置文件为: /WEB-INF/<servlet-name>-servlet.xml
                   这样配置文件就不是放在src下了，而是放在WEB-INF下，此时名字叫做HelloWorld-servlet.xml
          -->
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>classpath:Spring-mvc.xml</param-value>
        </init-param>

        <!--指定当Web应用启动时，装载Servlet的次序-->
        <load-on-startup>1</load-on-startup>
    </servlet>
    <!-- Spring MVC配置文件结束 -->


    <!--第四步：拦截设置-->
    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <!-- 由SpringMVC拦截所有请求 -->
        <url-pattern>/</url-pattern>
    </servlet-mapping>

<!--SpringMvc自定义标签 由后台的long类型在前台页面显示String类型-->
    <jsp-config>
        <taglib>
            <taglib-uri>/tags</taglib-uri>
            <!--指定自定义标签的位置-->
            <taglib-location>/WEB-INF/dateConvert.tld</taglib-location>
        </taglib>
    </jsp-config>


    <!--该过滤器用于处理post请求转换为标准的delete与put请求-->
    <filter>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <filter-class>org.springframework.web.filter.HiddenHttpMethodFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>HiddenHttpMethodFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>
</web-app>



